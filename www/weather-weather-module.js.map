{"version":3,"sources":["webpack:///./src/app/weather/weather-data.service.ts","webpack:///./src/app/weather/weather-item/weather-item.component.css","webpack:///./src/app/weather/weather-item/weather-item.component.html","webpack:///./src/app/weather/weather-item/weather-item.component.ts","webpack:///./src/app/weather/weather-routing.module.ts","webpack:///./src/app/weather/weather-search/weather-search.component.css","webpack:///./src/app/weather/weather-search/weather-search.component.html","webpack:///./src/app/weather/weather-search/weather-search.component.ts","webpack:///./src/app/weather/weather-view/weather-view.component.css","webpack:///./src/app/weather/weather-view/weather-view.component.html","webpack:///./src/app/weather/weather-view/weather-view.component.ts","webpack:///./src/app/weather/weather.module.ts","webpack:///./src/app/weather/weather.service.ts"],"names":[],"mappings":"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","file":"weather-weather-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Weather } from '../shared/interfaces/weather';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  weather: Weather = {\n    name: '',\n    country: '',\n    image: '',\n    description: null,\n    temperature: null,\n    lat: null,\n    lon: null,\n  };\n\n  constructor() { }\n}\n","module.exports = \".example-card {\\r\\n  max-width: 400px;\\r\\n}\\r\\n.example-header-image {\\r\\n  background-size: cover;\\r\\n}\\r\\n.description {\\r\\n  padding-top: 10px;\\r\\n}\\r\\nagm-map {\\r\\n  height: 300px;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"weather?.name\\\">\\n  <mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\">\\n            <img [src]=\\\"weather.image\\\" alt=\\\"Weather Icon\\\">\\n          </div>\\n      <mat-card-title>{{ weather.name }}, {{ weather.country }}</mat-card-title>\\n      <mat-card-subtitle>\\n        {{ weather.temperature | number: '1.0-0'}} â„‰\\n      </mat-card-subtitle>\\n    </mat-card-header>\\n    <agm-map [latitude]=\\\"weather.lat\\\" [longitude]=\\\"weather.lon\\\">\\n        <agm-marker [latitude]=\\\"weather.lat\\\" [longitude]=\\\"weather.lon\\\"></agm-marker>\\n      </agm-map>\\n    <mat-card-content class=\\\"description\\\">\\n      <h3 class=\\\"subheading-2\\\">\\n        Conditions:\\n      </h3>\\n          {{ weather.description }}\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-button>SAVE</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { WeatherDataService } from '../weather-data.service';\nimport { Weather } from '../../shared/interfaces/weather';\n\n@Component({\n  selector: 'app-weather-item',\n  templateUrl: './weather-item.component.html',\n  styleUrls: ['./weather-item.component.css']\n})\nexport class WeatherItemComponent implements OnInit {\n\n  constructor(private weatherDataService: WeatherDataService) { }\n\n  ngOnInit() {\n  }\n\n  get weather(): Weather {\n    return this.weatherDataService.weather;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherViewComponent } from './weather-view/weather-view.component';\n\nconst routes: Routes = [{\n  path: '',\n  pathMatch: 'full',\n  component: WeatherViewComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n","module.exports = \"\"","module.exports = \"<form class=\\\"example-form\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Search cities\\\"\\n           name=\\\"query\\\"\\n           [(ngModel)]=\\\"query\\\">\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\" style=\\\"margin-left: 10px;\\\">\\n    <button mat-raised-button\\n            color=\\\"primary\\\"\\n            (click)=\\\"search(query)\\\">Submit</button>\\n  </div>\\n</form>\\n\\n<div *ngIf=\\\"errorMessage?.message\\\" class=\\\"container\\\">{{errorMessage.cod }} | {{ errorMessage.message }}</div>\\n\\n{{ weather?.name }} | {{ weather?.temperature }} |\\n{{ weather?.description }}\\n\"","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../weather.service';\nimport { Weather } from '../../shared/interfaces/weather';\nimport { WeatherDataService } from '../weather-data.service';\n\n@Component({\n  selector: 'app-weather-search',\n  templateUrl: './weather-search.component.html',\n  styleUrls: ['./weather-search.component.css']\n})\nexport class WeatherSearchComponent implements OnInit {\n  query = '';\n  errorMessage: any = {};\n\n  constructor(private weatherService: WeatherService,\n              private weatherDataService: WeatherDataService) { }\n\n  ngOnInit() {\n  }\n\n  set weather(data: Weather) {\n    this.weatherDataService.weather = data;\n  }\n\n  search() {\n    this.weatherService\n        .searchWeatherData(this.query)\n        .subscribe(\n          weather => this.weather = weather,\n          error => this.errorMessage = <any>error,\n          () => this.query = ''\n        );\n  }\n\n}\n","module.exports = \".container-top {\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\"","module.exports = \"<div fxLayout=\\\"row\\\"\\n     fxLayoutAlign=\\\"space-around start\\\"\\n     class=\\\"container-top\\\">\\n\\n  <div fxFlex=\\\"40%\\\"\\n       fxFlexOffset=\\\"200px\\\">\\n    <app-weather-search></app-weather-search>\\n  </div>\\n\\n  <div fxFlex=\\\"50%\\\">\\n    <app-weather-item></app-weather-item>\\n  </div>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-view',\n  templateUrl: './weather-view.component.html',\n  styleUrls: ['./weather-view.component.css']\n})\nexport class WeatherViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { MaterialModule } from '../shared/material.module';\n\nimport { WeatherRoutingModule } from './weather-routing.module';\nimport { WeatherViewComponent } from './weather-view/weather-view.component';\nimport { WeatherItemComponent } from './weather-item/weather-item.component';\nimport { WeatherSearchComponent } from './weather-search/weather-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    MaterialModule,\n    WeatherRoutingModule\n  ],\n  exports: [WeatherViewComponent, WeatherItemComponent, WeatherSearchComponent],\n  declarations: [WeatherViewComponent, WeatherItemComponent, WeatherSearchComponent]\n})\nexport class WeatherModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { Weather } from '../shared/interfaces/weather';\nimport { WeatherData } from '../shared/interfaces/weather-data';\n\n@Injectable({\n providedIn: 'root'\n})\nexport class WeatherService {\n  private URL = 'http://api.openweathermap.org/data/2.5/weather?q=';\n  private KEY = '<YOUR_API_KEY_HERE>';\n  private IMP = '&units=imperial';\n\n constructor(private http: HttpClient) { }\n\n searchWeatherData(cityName: string): Observable<Weather> {\n   return this\n            .http\n            .get<WeatherData>(`${this.URL}${cityName}&APPID=${this.KEY}${this.IMP}`)\n            .pipe(\n              map(data => this.transformWeatherData(data)),\n              tap(data => console.log(JSON.stringify(data))),\n              catchError(this.handleError)\n            );\n }\n\n private transformWeatherData(data: WeatherData): Weather {\n   return {\n    name: data.name,\n    country: data.sys.country,\n    image: `http://openweathermap.org/img/w/${data.weather[0].icon}.png`,\n    description: data.weather[0].description,\n    temperature: data.main.temp,\n    lat: data.coord.lat,\n    lon: data.coord.lon\n   };\n }\n\n private handleError(res: HttpErrorResponse) {\n  console.error(res);\n  return throwError(res.error || 'Server error');\n }\n}\n"],"sourceRoot":""}